--- 
- name: "Check client ca certificate"
  register: client_ca_cert
  stat: "path=/etc/openvpn/ca.crt"

- name: "Check client signed key certificate"
  register: client_sign_cert
  stat: "path=/etc/openvpn/{{ inventory_hostname }}.crt"

- name: "Check client key"
  register: client_key
  stat: "path=/etc/openvpn/{{ inventory_hostname }}.key"

- name: "Creating Client certificate"
  delegate_to: "{{ server }}"
  shell: " cd /etc/easy-rsa/2.0; source ./vars; export EASY_RSA=\"${EASY_RSA:-.}\"; \"$EASY_RSA\"/pkitool --csr {{ inventory_hostname }} ;\"$EASY_RSA\"/pkitool --sign {{ inventory_hostname }} creates=/etc/easy-rsa/2.0/keys/{{ inventory_hostname }}.crt"

- name: "Copy the Client signed certificate to the master node"
  delegate_to: "{{ server }}"
  fetch: "src=/etc/easy-rsa/2.0/keys/{{ inventory_hostname }}.crt dest=/tmp/{{ inventory_hostname }}/ fail_on_missing=yes validate_md5=yes flat=yes"
  when: "client_sign_cert.stat.exists == false"

- name: "Copy the Client Key to the master node"
  delegate_to: "{{ server }}"
  fetch: "src=/etc/easy-rsa/2.0/keys/{{ inventory_hostname }}.key dest=/tmp/{{ inventory_hostname }}/ fail_on_missing=yes validate_md5=yes flat=yes"
  when: "client_key.stat.exists == false"

- name: "Copy the CA Certificate to the master node"
  delegate_to: "{{ server }}"
  fetch: "src=/etc/easy-rsa/2.0/keys/ca.crt dest=/tmp/{{ inventory_hostname }}/ fail_on_missing=yes validate_md5=yes flat=yes"
  when: "client_ca_cert.stat.exists == false"
