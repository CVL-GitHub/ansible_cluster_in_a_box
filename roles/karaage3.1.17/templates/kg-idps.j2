#!/usr/bin/python

import os, sys, traceback
import django
os.environ['DJANGO_SETTINGS_MODULE'] = "karaage.conf.settings"

DEFAULT_CACHE_FILE = "/var/cache/shibboleth/metadata.aaf.xml"

def get_idps_from_metadata(cache_path):
    import xml.etree.ElementTree as ET
    tree = ET.parse(cache_path)
    root=tree.getroot()
    idps=[]
    for entity in root.findall("{urn:oasis:names:tc:SAML:2.0:metadata}EntityDescriptor"):
        idp=False
        # %s"%entity.attrib['entityID']
        for idp in entity.findall('{urn:oasis:names:tc:SAML:2.0:metadata}IDPSSODescriptor'):
            idp=True
        if idp:
            for o in entity.findall('{urn:oasis:names:tc:SAML:2.0:metadata}Organization'):
                for c in o.findall('{urn:oasis:names:tc:SAML:2.0:metadata}OrganizationDisplayName'):
                    idps.append({'entityID':entity.attrib['entityID'],'name':c.text})
        
    return idps

def get_or_create_idp(entityID,name):
    from karaage.institutes.forms import InstituteForm
    from karaage.institutes.models import Institute
    from karaage.people.models import Group
    try:
        print "Check institute name = '%s', entityID = '%s'" %(name, entityID)
        institute = Institute.objects.get(saml_entityid=entityID)
        if institute:
            print "Find institute name = '%s', saml_entityid = '%s', group name = '%s'" %(institute.name, institute.saml_entityid, institute.group.name)
        else: 
            print "Institute name = '%s', entityID = '%s' not found" %(name, entityID)
        return
    except Institute.DoesNotExist:
        try:
            group, _ =Group.objects.get_or_create(name = name)
            if group:
                print "Get group name = '%s'" %(group.name)
                institute = Institute(name = name, group = group, saml_entityid = entityID, is_active = True)
                if institute:
                    print "Create institute OK: name = '%s', saml_entityid = '%s', group nane = '%s'" %(institute.name, institute.saml_entityid, institute.group.name)
                    institute.save()
                else:
                    print "Create institute name = '%s', entityID = '%s' failed" %(name, entityID)
            else:
                print "Get group name = '%s' failed" %(group.name)
        except:
            print "Exception: %s" %(traceback.format_exc())

def main(argv):
    if len(sys.argv) > 1:
        cache_path = argv[0]
    else:
        cache_path = DEFAULT_CACHE_FILE 
    django.setup()
    idps = get_idps_from_metadata(cache_path)
    for idp in idps:
        get_or_create_idp(entityID=idp['entityID'],name=idp['name'])

if __name__ == '__main__':
    main(sys.argv[1:])

